"""
    Tout ce qui ce trouve entre ces symboles (""") est un commentaire

    Explications:
    1. tout ce qui se retrouve sous la section [Ajouter] est considéré comme une syntaxe à ajouter
    2. tout ce qui se retrouve sous la section [Ignorer] est considéré comme une syntaxe à ignorer
    3. Syntaxe à ajouter:
        ex: PLUS -> \+

        3.1 Nom de la regle à ajouter (ex: PLUS) (Ne pas mettre d'espace, mettre _ )
        3.2 Symbole '->'
        3.3 regular expression pour détecter la règle (ex: \+ ) (note: si la regular expression commence par un espace, mettre [ ])
    
    4. Syntaxe à ignorer:
        ex: \s+
        4.1 regular expression pour détecter la règle (ex: \s+ )
    
    5. Que ce soit pour une règle à ajouter ou à ignorer, chaque regle doit être séparé par un retour à la ligne

    6. les regles qui se retrouve sous la section [Structure] indique comment repérer la fin d'un bout de code:
        6.1 FIN_LIGNE indique la fin d'une ligne
        6.2 DEBUT_BLOC indique le début d'un bloc de code
        6.3 FIN_BLOC indique la fin d'un bloc de code
    
    7. il est possible de regrouper certaines regles dans une même catégorie. Pour ce faire, il suffit de mettre:
        ex: categorie1 {
            regle1 -> pattern1
            regle2 -> pattern2
            regle3 -> pattern3
            ...
            }
            categorie2 {
            regle1 -> pattern1
            regle2 -> pattern2
            regle3 -> pattern3
            ...
            }
        rassembler les règles dans des categories est OPTIONNEL.

        ATTENTION:
        il 'est pas recommander de nommer une categorie 'expression'
"""


[Ajouter]

    commande {
        AFFICHER        ->      \bafficher\b
        LIRE            ->      \blire\b
    }

    # operateur
    ASSIGNEMENT     ->      <-


    # bloc si
    SI              ->      \bsi\b
    ALORS           ->      \balors\b
    SINON           ->      \bsinon\b
    FIN_SI          ->      \bfin si\b
    


    # bloc pour
    POUR            ->      \bpour\b
    A               ->      \ba\b

    # bloc tant que
    TANT_QUE        ->      \btant que\b

    fin_bloucle {
        FIN_POUR        ->      \bfin pour\b
        FIN_TANT_QUE    ->      \bfin tant que\b
    }



    type_de_donnees {
        ENTIER          ->      \d+
        REEL            ->      \d+\.\d+
        CHAINE          ->      ".*?"
        BOOLEEN         ->      vrai|faux
        NUL             ->      nul
    }

    arithmetique {
        PLUS            ->      \+
        EXP             ->      \*{2}
        MUL             ->      \*
        MOINS           ->      -
        DIV             ->      \\
        MOD             ->      \bmod\b|[%]
    }


    comparaison {
        EGAL            ->      =
        PAS_EGAL        ->      <>|≠
        PLUS_GRAND      ->      >
        PLUS_PETIT      ->      <
        PLUS_GRAND_EGAL ->      >=
        PLUS_PETIT_EGAL ->      <=
    }

    # operateur logique
    ET              ->      et
    OU              ->      ou
    PAS             ->      pas


    # separateur
    PARENT_OUV      ->      [(]
    PARENT_FERM     ->      [)]


    # sous-categorie
    # le point indique aussi un nombre decimal
    POINT           ->      \.

    NOM_VARIABLE    ->      \w+
    
    


[Ignorer]

    \s+


